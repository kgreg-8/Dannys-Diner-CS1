/* --------------------
   Case Study Questions
   --------------------*/

-- 1. What is the total amount each customer spent at the restaurant?
      -- A: $76 | B: $74 | C: $36 
-- 2. How many days has each customer visited the restaurant?
      -- A: 4 days | B: 6 days | C: 2 days
-- 3. What was the first item from the menu purchased by each customer?
      -- A: 1 | B: 2 | C: 3 Key: defining window function in CTE
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
-- 5. Which item was the most popular for each customer?
-- 6. Which item was purchased first by the customer after they became a member?
-- 7. Which item was purchased just before the customer became a member?
-- 8. What is the total items and amount spent for each member before they became a member?
-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

/*
-- #1:
SELECT
	s.customer_id,
    SUM(m.price) AS total_spent
FROM dannys_diner.sales AS s
		JOIN 
    dannys_diner.menu AS m ON s.product_id = m.product_id
GROUP BY s.customer_id -- the group by at this level consolidates customer_id so that no duplicate rows display --
ORDER BY s.customer_id; 

-- #2:
SELECT 
	customer_id,
    COUNT(DISTINCT order_date)
FROM dannys_diner.sales 
GROUP BY customer_id
; 
*/

-- #3 (first item each customer purchased)
WITH cte AS (
  SELECT
	ROW_NUMBER() OVER w as row_num,
    customer_id,
    order_date,
    product_id
FROM dannys_diner.sales
WINDOW w AS (PARTITION BY customer_id ORDER BY order_date))

SELECT
    customer_id,
    product_id
FROM cte
WHERE row_num = 1;
